public async Task<List<OrderDTO>> GetOrders(
 DateTime? dateFrom,
 DateTime? dateTo,
 List<int> customerIds,
 List<int> statusIds,
 bool? isActive)
{
	 IQueryable<Order> query = dbContext.Orders.AsNoTracking();
	 if (dateFrom.HasValue)
	 {
	 query = query.Where(o => o.OrderDate >= dateFrom.Value);
	 }
	 if (dateTo.HasValue)
	 {
		query = query.Where(o => o.OrderDate < dateTo.Value.AddDays(1));
	 }
	 if (customerIds != null && customerIds.Count > 0)
	 {
		query = query.Where(o => customerIds.Contains(o.CustomerId));
	 }
	 if (statusIds != null && statusIds.Count > 0)
	 {
		query = query.Where(o => statusIds.Contains(o.StatusId));
	 }
	 if (isActive.HasValue)
	 {
		query = query.Where(o => o.IsActive == isActive.Value);
	 }
	 return await query
	 .Select(o => new OrderDTO
		 {
			 Id = o.Id,
			 Number = o.Number,
			 OrderDate = o.OrderDate,
			 CustomerId = o.CustomerId,
			 CustomerName = o.Customer.Name,
			 StatusId = o.StatusId,
			 StatusName = o.Status.Name,
			 Total = o.Total
		 })
	 .ToListAsync();
}
